{"ast":null,"code":"var _jsxFileName = \"/home/mtibaldo/contact-agenda/frontend/src/pages/NewContact.jsx\";\nimport React from 'react';\nimport Contact from '../models/Contact'; // import { Link } from 'react-router-dom'\n\nexport default class newContact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      lastName: \"\",\n      email: \"\",\n      birthDate: undefined,\n      phone: \"\"\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleLastNameChange = e => {\n      this.setState({\n        lastName: e.target.value\n      });\n    };\n\n    this.handleEmailChange = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleBirthDateChange = e => {\n      this.setState({\n        birthDate: e.target.value\n      });\n    };\n\n    this.handlePhoneChange = e => {\n      this.setState({\n        phone: e.target.value\n      });\n    };\n\n    this.handleNewContact = () => {\n      var querystring = require('querystring');\n\n      var http = require('http');\n\n      const newContact = new Contact(this.state);\n      var post_data = querystring.stringify(newContact);\n      console.log(newContact);\n      var post_options = {\n        host: 'localhost',\n        port: '9000',\n        path: '/new',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Length': Buffer.byteLength(post_data)\n        }\n      }; // Set up the request\n\n      var post_req = http.request(post_options, function (res) {\n        res.setEncoding('utf8');\n        res.on('data', function (chunk) {\n          console.log('Response: ' + chunk);\n        });\n      }); // post the data\n\n      post_req.write(post_data);\n      post_req.end();\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/new\").then(res => res.text()).then(res => console.log(res));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"NewContactForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"NameInput\",\n      name: \"Nombre\",\n      value: this.state.name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"LastNameInput\",\n      name: \"Apellido\",\n      value: this.state.lastName,\n      onChange: this.handleLastNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"EmailInput\",\n      type: \"email\",\n      name: \"Email\",\n      value: this.state.email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"BirthDateInput\",\n      type: \"date\",\n      name: \"Fecha de nacimiento\",\n      value: this.state.birthDate,\n      onChange: this.handleBirthDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"PhoneInput\",\n      name: \"Numero de telefono\",\n      value: this.state.phone,\n      onChange: this.handlePhoneChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleNewContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Nuevo contacto\"));\n  }\n\n}","map":{"version":3,"sources":["/home/mtibaldo/contact-agenda/frontend/src/pages/NewContact.jsx"],"names":["React","Contact","newContact","Component","constructor","props","state","name","lastName","email","birthDate","undefined","phone","handleNameChange","e","setState","target","value","handleLastNameChange","handleEmailChange","handleBirthDateChange","handlePhoneChange","handleNewContact","querystring","require","http","post_data","stringify","console","log","post_options","host","port","path","method","headers","Buffer","byteLength","post_req","request","res","setEncoding","on","chunk","write","end","callAPI","fetch","then","text","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Contact from '../models/Contact';\n// import { Link } from 'react-router-dom'\n\nexport default class newContact extends React.Component   {\n    constructor(props) {\n        super(props);\n    }\n    \n    callAPI() {\n        fetch(\"http://localhost:9000/new\")\n            .then(res => res.text())\n            .then(res => console.log(res));\n    }\n\n    state ={\n        name:\"\",\n        lastName:\"\",\n        email:\"\",\n        birthDate: undefined,\n        phone:\"\",\n    }\n\n\n   handleNameChange = (e) => {\n        this.setState({name: e.target.value});\n    }\n    handleLastNameChange = (e) => {\n        this.setState({lastName: e.target.value});\n    }\n    handleEmailChange = (e) => {\n      this.setState({email: e.target.value});\n    }\n    handleBirthDateChange = (e) => {\n        this.setState({birthDate: e.target.value});\n    }\n    handlePhoneChange = (e) => {\n        this.setState({phone: e.target.value});\n    }\n\n    handleNewContact =()=>{\n        var querystring = require('querystring');\n        var http = require('http');\n        const newContact = new Contact(this.state);\n        var post_data = querystring.stringify(newContact);\n        console.log(newContact);\n        var post_options = {\n            host: 'localhost',\n            port: '9000',\n            path: '/new',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Content-Length': Buffer.byteLength(post_data)\n            }\n        };\n    \n        // Set up the request\n        var post_req = http.request(post_options, function(res) {\n            res.setEncoding('utf8');\n            res.on('data', function (chunk) {\n                console.log('Response: ' + chunk);\n            });\n        });\n    \n        // post the data\n        post_req.write(post_data);\n        post_req.end();\n    }\n\n\n    render(){\n        return (\n            <form className = \"NewContactForm\">\n                <input className = \"NameInput\" name = \"Nombre\" value={this.state.name} onChange={this.handleNameChange}></input>\n                <input className = \"LastNameInput\" name = \"Apellido\" value={this.state.lastName} onChange={this.handleLastNameChange}></input>\n                <input className = \"EmailInput\" type = \"email\" name = \"Email\" value={this.state.email} onChange={this.handleEmailChange}></input>\n                <input className = \"BirthDateInput\" type = \"date\" name= \"Fecha de nacimiento\"value={this.state.birthDate} onChange={this.handleBirthDateChange}></input>\n                <input className = \"PhoneInput\" name = \"Numero de telefono\"value={this.state.phone} onChange={this.handlePhoneChange}></input>\n                <button type=\"button\" onClick={this.handleNewContact}>Nuevo contacto</button>\n            </form>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}